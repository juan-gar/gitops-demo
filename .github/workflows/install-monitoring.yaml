name: Install Monitoring Stack (Prometheus & Grafana) on GKE

on:
  workflow_dispatch:
    # inputs:
    #   cluster_name:
    #     description: 'GKE Cluster Name'
    #     required: true
    #     type: string
    #   cluster_zone:
    #     description: 'GKE Cluster Zone'
    #     required: true
    #     type: string
    #   project_id:
    #     description: 'GCP Project ID'
    #     required: true
    #     type: string

env:
  GKE_CLUSTER: juangar-sandbox-gke-cluster
  GKE_ZONE: us-central1
  PROJECT_ID: juangar-sandbox

jobs:
  install-monitoring:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.GKE_SA }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Install gke-gcloud-auth-plugin
      run: |
        gcloud components install gke-gcloud-auth-plugin

    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

    - name: Create monitoring namespace
      run: |
        kubectl apply -f monitoring/namespace.yaml

    - name: Apply Prometheus RBAC
      run: |
        kubectl apply -f monitoring/prometheus-rbac.yaml

    - name: Apply Prometheus configuration
      run: |
        kubectl apply -f monitoring/prometheus-config.yaml

    - name: Deploy Prometheus
      run: |
        kubectl apply -f monitoring/prometheus-deployment.yaml

    - name: Wait for Prometheus to be ready
      run: |
        kubectl wait --for=condition=available --timeout=300s deployment/prometheus -n monitoring

    - name: Apply Grafana configuration
      run: |
        kubectl apply -f monitoring/grafana-config.yaml

    - name: Deploy Grafana
      run: |
        kubectl apply -f monitoring/grafana-deployment.yaml

    - name: Wait for Grafana to be ready
      run: |
        kubectl wait --for=condition=available --timeout=300s deployment/grafana -n monitoring

    - name: Wait for external IPs
      run: |
        echo "Waiting for Prometheus external IP..."
        kubectl wait --for=jsonpath='{.status.loadBalancer.ingress[0].ip}' --timeout=300s service/prometheus -n monitoring
        echo "Waiting for Grafana external IP..."
        kubectl wait --for=jsonpath='{.status.loadBalancer.ingress[0].ip}' --timeout=300s service/grafana -n monitoring

    - name: Get service URLs
      id: service-urls
      run: |
        PROMETHEUS_IP=$(kubectl get svc prometheus -n monitoring -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        GRAFANA_IP=$(kubectl get svc grafana -n monitoring -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
        
        echo "prometheus_url=http://$PROMETHEUS_IP:9090" >> $GITHUB_OUTPUT
        echo "grafana_url=http://$GRAFANA_IP:3000" >> $GITHUB_OUTPUT
        
        echo "Prometheus URL: http://$PROMETHEUS_IP:9090"
        echo "Grafana URL: http://$GRAFANA_IP:3000"

    - name: Installation summary
      run: |
        echo "🎉 Monitoring stack installation completed successfully!"
        echo "📋 Installation Details:"
        echo "- Cluster: $GKE_CLUSTER"
        echo "- Zone: $GKE_ZONE"
        echo "- Project: $PROJECT_ID"
        echo "- Namespace: monitoring"
        echo ""
        echo "🔍 Prometheus:"
        echo "- URL: ${{ steps.service-urls.outputs.prometheus_url }}"
        echo "- Use for metrics collection and querying"
        echo ""
        echo "📊 Grafana:"
        echo "- URL: ${{ steps.service-urls.outputs.grafana_url }}"
        echo "- Username: admin"
        echo "- Password: admin123"
        echo "- Prometheus datasource pre-configured"
        echo ""
        echo "🔐 Security Note: Change the Grafana admin password after first login!"
        echo "📈 A basic Kubernetes cluster dashboard has been pre-configured."